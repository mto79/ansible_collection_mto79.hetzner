---
- name: "HETZNER ROBOT | SSH key management"
  ansible.builtin.debug:
    msg: "SSH key management in {{ hetzner_server_role_name }}"

- name: "HETZNER ROBOT | SSH key management | Retrieve first public key fingerprint"
  ansible.builtin.uri:
    url: "{{ hetzner_server_api_url }}/key"
    return_content: yes
    method: GET
    user: "{{ hetzner_server_api_username }}"
    password: "{{ hetzner_server_api_password }}"
    force_basic_auth: yes
    status_code: 200
  register: _hetzner_server_key
  ignore_errors: true
  delegate_to: localhost

- name: "HETZNER ROBOT | SSH key management | Add key when no keys are found"
  when: _hetzner_server_key.json.error.code == "NOT_FOUND"
  ansible.builtin.debug:
    msg: "No SSH keys found, adding key"



- name: "HETZNER ROBOT | SSH key management | Set authorized_key fact"
  ansible.builtin.set_fact:
    hetzner_server_authorized_key: "{{ _hetzner_server_key.json[0].key.fingerprint }}"

- name: "SSHKeys | Display authorized_key fact"
  ansible.builtin.debug:
    var: hetzner_server_authorized_key

...
