---
- name: "Setup | Query servers"
  ansible.builtin.debug:
    msg: "Setup Hetzner server in {{ hetzner_server_role_name }}"

- name: "Setup | Retrieve servers"
  ansible.builtin.uri:
    url: "{{ hetzner_server_api_url }}/server"
    return_content: yes
    method: GET
    user: "{{ hetzner_server_api_username }}"
    password: "{{ hetzner_server_api_password }}"
    force_basic_auth: yes
    status_code: 200
  register: _hetzner_server_query
  ignore_errors: true
  delegate_to: localhost

- name: "Setup | Select Hetzner Server"
  ansible.builtin.pause:
    prompt: |
      {% for _hetzner_server in _hetzner_server_query.json %}
      {{ loop.index0 }} => {{ _hetzner_server.server.server_number }} - {{ _hetzner_server.server.server_ip }}
      {% endfor %}
      Select your Hetzner server, by entering the number
  register: _hetzner_server_selection

- name: "Setup | Test if selection is correct"
  ansible.builtin.assert:
    that:
      - _hetzner_server_selection is defined
      - _hetzner_server_selection.user_input | int >= 0
      - _hetzner_server_selection.user_input | int < _hetzner_server_query.json | count
    fail_msg: "Please select an existing Hetzner server"
    success_msg: "Hetzner server selected"
    quiet: false

- name: "Setup | Set hetzner_server_ip"
  ansible.builtin.set_fact:
    hetzner_server_ip: "{{ _hetzner_server_query.json[_hetzner_server_selection.user_input | int].server.server_ip }}"
    hetzner_server_number: "{{ _hetzner_server_query.json[_hetzner_server_selection.user_input | int].server.server_number }}"

- name: "Setup | Display selected server"
  ansible.builtin.debug:
    msg: "Selected server {{ hetzner_server_number }} with IP {{ hetzner_server_ip }}"

...
