---
- name: "Setup | Query a list of all servers"
  community.hrobot.server_info:
    hetzner_user: "{{ hetzner_server_api_username }}"
    hetzner_password: "{{ hetzner_server_api_password }}"
  register: _hetzner_server_servers_result

- name: Show how many Hetzner servers were found
  ansible.builtin.debug:
    msg: "Found {{ _hetzner_server_servers_result.servers | count }} hetzner servers"
  failed_when: (_hetzner_server_servers_result.servers | count) | int == 0

- name: "Setup | Select Hetzner Server"
  when: _hetzner_server_servers_result.servers | count > 0
  block:
    - name: "Setup | Select Hetzner Server"
      ansible.builtin.pause:
        prompt: |
          {% for _hetzner_server in _hetzner_server_servers_result.servers %}
          {{ loop.index0 }} => {{ _hetzner_server.server_number }} - {{ _hetzner_server.server_ip }}
          {% endfor %}
          Select your Hetzner server, by entering the number
      register: _hetzner_server_selection
      delegate_to: localhost

    - name: "Setup | Test if selection is correct"
      ansible.builtin.assert:
        that:
          - _hetzner_server_selection is defined
          - _hetzner_server_selection.user_input | int >= 0
          - _hetzner_server_selection.user_input | int < _hetzner_server_servers_result.servers | count
        fail_msg: "Please select an existing Hetzner server"
        success_msg: "Hetzner server selected"
        quiet: false
      delegate_to: localhost

    - name: "Setup | Set hetzner_server_ip"
      ansible.builtin.set_fact:
        hetzner_server_ip: "{{_hetzner_server_servers_result.servers[_hetzner_server_selection.user_input | int].server_ip }}"
        hetzner_server_number: "{{ _hetzner_server_servers_result.servers[_hetzner_server_selection.user_input | int].server_number }}"
      delegate_to: localhost

...
