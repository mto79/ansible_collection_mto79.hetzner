---
- name: "Setup | Rescue | Check rescue mode"
  ansible.builtin.uri:
    url: "{{ hetzner_server_setup_api_url }}/boot/{{ hetzner_server_setup_number }}/rescue"
    method: "GET"
    user: "{{ hetzner_server_setup_api_username }}"
    password: "{{ hetzner_server_setup_api_password }}"
    force_basic_auth: "yes"
    status_code: "200"
  register: "_hetzner_server_setup_rescue_state"
  delegate_to: "localhost"

- name: "Setup | Rescue | Enable rescue mode"
  when: "not _hetzner_server_setup_rescue_state.json.rescue.active"
  block:

    - name: "Setup | Rescue | Enable a rescue system (64bit Linux) for the next boot"
      community.hrobot.boot:
        hetzner_user: "{{ hetzner_server_setup_api_username }}"
        hetzner_password: "{{ hetzner_server_setup_api_password }}"
        server_number: "{{ hetzner_server_setup_number | int }}"
        rescue:
          arch: "64"
          os: "linux"
          authorized_keys: "{{ hetzner_server_setup_authorized_key }}"

    - name: "Setup | Rescue | Pause a bit to allow rescue mode to settle"
      ansible.builtin.pause:
        seconds: 5

    - name: "Setup | Rescue | Make sure that the server supports manual reset"
      community.hrobot.reset:
        hetzner_user: "{{ hetzner_server_setup_api_username }}"
        hetzner_password: "{{ hetzner_server_setup_api_password }}"
        server_number: "{{ hetzner_server_setup_number | int }}"
        reset_type: "hardware"

    - name: "Setup | Rescue | Remove server from local known_hosts file"
      ansible.builtin.command: "/usr/bin/ssh-keygen -R {{ hetzner_server_setup_ip }}"
      register: _hetzner_server_setup_cmd_output
      failed_when: _hetzner_server_setup_cmd_output.rc != 0
      changed_when: '"updated" in _hetzner_server_setup_cmd_output.stdout'
      ignore_errors: true
      delegate_to: "localhost"

    - name: "Setup | Rescue | Pause a bit for the hardware reset to kick in"
      ansible.builtin.pause:
        seconds: 5

    - name: "Setup | Rescue | wait 600 seconds for port 22 to become open"
      ansible.builtin.wait_for:
        port: 22
        host: '{{ hetzner_server_setup_ip }}'
        delay: 10
        timeout: 600
      connection: "local"

- name: "Setup | Rescue | Choose image to install when no custom image is set"
  when:
    - "hetzner_server_setup_custom_image is not defined"
    - "hetzner_server_setup_custom_image_source is not defined"
  ansible.builtin.include_tasks: "images.yml"

- name: "Setup | Rescue | Choose image to install when custom image is set"
  when:
    - "hetzner_server_setup_custom_image is defined"
    - "hetzner_server_setup_custom_image_source is defined"
  block:

    - name: "Setup | Rescue | Copy file with owner and permissions"
      ansible.builtin.copy:
        src: "{{ hetzner_server_setup_custom_image_source }}"
        dest: "{{ hetzner_server_custom_setup_image }}"
        owner: root
        group: root
        mode: "0644"
      delegate_to: "{{ hetzner_server_setup_ip }}"

- name: "Setup | Rescue | Copy autosetup configuration file"
  ansible.builtin.template:
    src: "templates/setup/hetzner_rescue_autosetup.j2"
    dest: /root/hetzner_rescue_autosetup.ansible
    owner: root
    group: root
    mode: "0644"
  delegate_to: "{{ hetzner_server_setup_ip }}"

- name: "Setup | Rescue | Check if /root/.oldroot/nfs/install/installimage exists"
  ansible.builtin.stat:
    path: "/root/.oldroot/nfs/install/installimage"
  register: "_hetzner_server_setup_installimage"

- name: "Setup | Rescue | Run installimage"
  when: "_hetzner_server_setup_installimage.stat.exists"
  ansible.builtin.command: "/root/.oldroot/nfs/install/installimage -a -c /root/hetzner_rescue_autosetup.ansible"
  environment:
    TERM: "vt100"
  register: "_hetzner_server_setup_installimage_result"
  changed_when: true
  failed_when: false
  delegate_to: "{{ hetzner_server_setup_ip }}"

- name: "Setup | Rescue | Print installimage output with -v"
  ansible.builtin.debug:
    var: "_hetzner_server_setup_installimage_result.stdout_lines"
    verbosity: 1
  delegate_to: "localhost"

- name: "Setup | Rescue | Check stderr from installimage"
  ansible.builtin.debug:
    msg: "Something want wrong at installimage: {{ _hetzner_server_setup_installimage_result.stderr_lines | join('\n') }}"
  when:
    - "_hetzner_server_setup_installimage_result.stderr_lines | length > 0"
    - "not hetzner_server_setup_image_ignore_errors"
  delegate_to: "localhost"

- name: "Setup | Rescue | Check stdout from installimage"
  ansible.builtin.fail:
    msg: "Installation failed, check log: {{ result.stdout_lines | join('\n') }}"
  when:
    - >
      _hetzner_server_setup_installimage_result.stdout is search('An error occured while installing the new system') or
      _hetzner_server_setup_installimage_result.stdout is search('Cancelled')
    - not hetzner_server_setup_image_ignore_errors
  delegate_to: "localhost"

- name: "Setup | Rescue | Reboot server"
  ansible.builtin.shell: "sync && sleep 2 && shutdown -r now"
  async: 1
  poll: 0
  changed_when: true
  failed_when: false
  delegate_to: "{{ hetzner_server_setup_ip }}"

- name: "Setup | Rescue | Remove server from local known_hosts file"
  ansible.builtin.command: "/usr/bin/ssh-keygen -R {{ hetzner_server_setup_ip }}"
  register: "_hetzner_server_setup_cmd_output"
  failed_when: "_hetzner_server_setup_cmd_output.rc != 0"
  changed_when: '"updated" in _hetzner_server_setup_cmd_output.stdout'
  ignore_errors: true
  delegate_to: "localhost"

...
