---
- name: "Setup | Manage SSH keys"
  ansible.builtin.include_tasks: 
    file: "sshkeys.yml"

- name: "Setup | Query a list of all servers"
  community.hrobot.server_info:
    hetzner_user: "{{ hetzner_server_api_username }}"
    hetzner_password: "{{ hetzner_server_api_password }}"
  register: _hetzner_server_servers_result

- name: "Setup | Display all servers"
  ansible.builtin.debug:
    msg: "{{ _hetzner_server_servers_result.servers }}"

- name: "Setup | Select Hetzner Server"
  ansible.builtin.pause:
    prompt: |
      {% for _hetzner_server in _hetzner_server_servers_result.servers %}
      {{ loop.index0 }} => {{ _hetzner_server.server.server_number }} - {{ _hetzner_server.server.server_ip }}
      {% endfor %}
      Select your Hetzner server, by entering the number
  register: _hetzner_server_selection
  delegate_to: localhost



#- name: "Setup | Retrieve servers from Hetzner Robot API"
#  ansible.builtin.include_tasks: 
#    file: "api.yml"
#  vars:
#    hetzner_server_api_action: "server"
#    hetzner_server_api_method: "GET"

#- name: "Setup | Select Hetzner Server"
#  ansible.builtin.pause:
#    prompt: |
#      {% for _hetzner_server in _hetzner_server_api_result.json %}
#      {{ loop.index0 }} => {{ _hetzner_server.server.server_number }} - {{ _hetzner_server.server.server_ip }}
#      {% endfor %}
#      Select your Hetzner server, by entering the number
#  register: _hetzner_server_selection
#  delegate_to: localhost

#- name: "Setup | Test if selection is correct"
#  ansible.builtin.assert:
#    that:
#      - _hetzner_server_selection is defined
#      - _hetzner_server_selection.user_input | int >= 0
#      - _hetzner_server_selection.user_input | int < _hetzner_server_api_result.json | count
#    fail_msg: "Please select an existing Hetzner server"
#    success_msg: "Hetzner server selected"
#    quiet: false
#  delegate_to: localhost

#- name: "Setup | Set hetzner_server_ip"
#  ansible.builtin.set_fact:
#    hetzner_server_ip: "{{ _hetzner_server_api_result.json[_hetzner_server_selection.user_input | int].server.server_ip }}"
#    hetzner_server_number: "{{ _hetzner_server_api_result.json[_hetzner_server_selection.user_input | int].server.server_number }}"
#  delegate_to: localhost

#- name: "Setup | Display selected server"
#  ansible.builtin.debug:
#    msg: "Selected server {{ hetzner_server_number }} with IP {{ hetzner_server_ip }}"
#  delegate_to: localhost

- name: "Setup | List all SSH keys"
  community.hrobot.ssh_key_info:
    hetzner_user: "{{ hetzner_server_api_username }}"
    hetzner_password: "{{ hetzner_server_api_password }}"
  register: _hetzner_server_ssh_keys

- name: Show how many keys were found
  ansible.builtin.debug:
    msg: "Found {{ _hetzner_server_ssh_keys.ssh_keys }}"


#- name: "Setup | Select ssh key"
#  ansible.builtin.pause:
#    prompt: |
#      {% for _hetzner_server_key in _hetzner_servers_keys.json %}
#      {{ loop.index0 }} => {{ _hetzner_server_key.key.name }}
#      {% endfor %}
#      Select your ssh key, by entering the number
#  register: _hetzner_server_key_selection
#  delegate_to: localhost

#- name: "Setup | Retrieve current setup of {{ hetzner_server_ip }}"
#  ansible.builtin.gather_facts:
#  register: _hetzner_server_host_facts
#  delegate_to: "{{ hetzner_server_ip }}"

#- name: "Setup | Check Boot image and hetzner_force_provisioning"
#  ansible.builtin.set_fact:
#    _hetzner_server_needs_reprovision: true
#  when:
#    - _hetzner_server_host_facts.ansible_facts.ansible_cmdline.BOOT_IMAGE is match("rescue") or (hetzner_server_force_provisioning is defined and hetzner_server_force_provisioning )
#  delegate_to: localhost

#- name: "Setup | Check rescue mode"
#  ansible.builtin.uri:
#    url: "{{ hetzner_server_api_url }}/boot/{{ hetzner_server_number }}/rescue"
#    method: GET
#    user: "{{ hetzner_server_api_username }}"
#    password: "{{ hetzner_server_api_password }}"
#    force_basic_auth: yes
#    status_code: 200
#  register: _hetzner_server_rescue
#  delegate_to: localhost

#- name: "Setup | Display rescue mode"
#  ansible.builtin.debug:
#    msg: "Rescue mode is {{ _hetzner_server_rescue.json.rescue.active }}"
#  delegate_to: localhost



...
