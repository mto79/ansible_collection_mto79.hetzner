---
- name: "Api | Retrieve information from Hetzner API"
  ansible.builtin.uri:
    url: "{{ hetzner_server_api_url }}/{{ hetzner_server_api_action }}"
    return_content: true
    method: "{{ hetzner_server_api_method | default('GET') }}"
    user: "{{ hetzner_server_api_username }}"
    password: "{{ hetzner_server_api_password }}"
    force_basic_auth: true
    status_code: 200
    timeout: 5
  register: _hetzner_servers_api_result
  delegate_to: localhost
  ignore_errors: true 

#- name: "Api | Handle errors"
#  block:
    # Check if the request was successful (200 status code)
#    - ansible.builtin.assert:
#        that:
#          - "_hetzner_servers_api_result.status == 200"
#        success_msg: "HTTP request successful"
#        fail_msg: "HTTP request failed with status {{ _hetzner_servers_api_result.status }}"
    # Handle connection failure errors
#    - ansible.builtin.meta: end_host
#      when: "'Failed to connect to host' in _hetzner_servers_api_result.stderr"
    # Handle timeout errors
#    - ansible.builtin.meta: end_host
#      when: "'Timeout was reached' in _hetzner_servers_api_result.stderr"
    # Handle other HTTP errors
#    - ansible.builtin.fail:
#        msg: "HTTP request failed with status {{ _hetzner_servers_api_result.status }}"
#      when: "_hetzner_servers_api_result.status not in [200, 201, 202, 204, 206]"

#  rescue:
    # Handle exceptions and errors
#    - ansible.builtin.fail:
#        msg: "HTTP request failed: {{ _hetzner_servers_api_result.msg }}"
#  ignore_errors: true 
...